{"version":3,"sources":["Main/Modal/SuccsessModal.module.scss","Main/Text/Letter/Letter.module.scss","Main/Main.module.scss","Main/Text/Letter/Letter.jsx","Main/DropDown/DropDown.jsx","Main/NavBar/NavBar.jsx","icons/target.svg","icons/speed.svg","Main/Modal/SuccessModal.jsx","Main/Modal/StartModal.jsx","Main/Text/Text.jsx","Main/Main.jsx","App.js","index.js","Main/Text/Text.module.scss"],"names":["module","exports","Letter","value","style","className","styles","mistake","active","passed","default","DropDown","language","setLanguage","DropdownButton","id","variant","title","Dropdown","Item","onClick","e","NavBar","startTest","restart","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Button","SuccessModal","passedText","text","speed","accuracy","useEffect","length","setShow","useState","show","close","Modal","centered","onHide","Header","Title","Body","indicators","indicators_span","src","Speed","alt","icon","indicators_numbers","isNaN","toFixed","small_text","Target","Footer","StartModal","start","time","fontSize","Text","setText","setTime","setPassedText","activeText","setActiveText","defaultText","setDefaultText","changeIndex","setChangeIndex","status","setStatus","correctCount","setCorrectCount","mistakeCount","setMistakeCount","setSpeed","setAccuracy","inputRef","useRef","getText","a","fetch","res","data","json","newText","then","newData","join","split","current","focus","console","log","slice","useKeyPress","key","preventDefault","count","document","addEventListener","removeEventListener","interval","setInterval","Math","round","clearInterval","view","typing_block","text_body","type","ref","input","map","el","index","Main","setStart","main","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c71eb539.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"indicators\":\"SuccsessModal_indicators__1tmt-\",\"accuracy\":\"SuccsessModal_accuracy__2VJ8z\",\"speed\":\"SuccsessModal_speed__1CAFY\",\"indicators_span\":\"SuccsessModal_indicators_span__3qHiE\",\"icon\":\"SuccsessModal_icon__1FQdJ\",\"indicators_numbers\":\"SuccsessModal_indicators_numbers__3m740\",\"small_text\":\"SuccsessModal_small_text__3VnWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Letter_default__o0hUb\",\"active\":\"Letter_active__3KTnn\",\"mistake\":\"Letter_mistake__1m2FB\",\"passed\":\"Letter_passed__2Bo_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3Xvh9\"};","import React from 'react';\r\nimport styles from './Letter.module.scss';\r\n\r\nconst Letter = ({ value, style }) => {\r\n    if (style === 'mistake') {\r\n        return <span className={styles.mistake}>{value}</span>;\r\n    } else if (style === 'active') {\r\n        return <span className={styles.active}>{value}</span>;\r\n    } else if (style === 'passed') {\r\n        return <span className={styles.passed}>{value}</span>;\r\n    } else {\r\n        return <span className={styles.default}>{value}</span>;\r\n    }\r\n};\r\n\r\nexport default Letter;\r\n","import React from 'react';\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nconst DropDown = ({ language, setLanguage }) => {\r\n    return (\r\n        <DropdownButton id=\"dropdown-basic-button\" variant=\"secondary\" title={language}>\r\n            <Dropdown.Item\r\n                value={'Russian'}\r\n                onClick={(e) => {\r\n                    setLanguage('Russian');\r\n                }}\r\n            >\r\n                Russian layout\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n                value={'English'}\r\n                onClick={(e) => {\r\n                    setLanguage('English');\r\n                }}\r\n            >\r\n                English layout\r\n            </Dropdown.Item>\r\n        </DropdownButton>\r\n    );\r\n};\r\n\r\nexport default DropDown;\r\n","import React from 'react';\r\nimport DropDown from '../DropDown/DropDown';\r\nimport { Navbar, Nav, Button } from 'react-bootstrap';\r\n\r\nconst NavBar = ({ startTest, language, setLanguage, restart }) => {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"p-2 pt-1 pb-1 b2 rounded\">\r\n            <Navbar.Brand> Тренажер слепой печати</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-md-between\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Button\r\n                        variant=\"success\"\r\n                        onClick={() => {\r\n                            startTest();\r\n                            restart();\r\n                        }}\r\n                    >\r\n                        Тестирование\r\n                    </Button>\r\n                </Nav>\r\n                <DropDown language={language} setLanguage={setLanguage} />\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/target.6312370e.svg\";","export default __webpack_public_path__ + \"static/media/speed.b63075ca.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport styles from './SuccsessModal.module.scss';\r\nimport Target from '../../icons/target.svg';\r\nimport Speed from '../../icons/speed.svg';\r\n\r\nconst SuccessModal = ({ passedText, text, speed, accuracy, restart }) => {\r\n    useEffect(() => {\r\n        if (text.length === passedText.length && text.length !== 0) {\r\n            setShow(true);\r\n        }\r\n    }, [text, passedText]);\r\n    const [show, setShow] = useState(false);\r\n    const close = () => {\r\n        setShow(false);\r\n    };\r\n    return (\r\n        <div className=\"modal\">\r\n            <Modal show={show} centered={true} onHide={() => {}}>\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h4>Поздравляем с завершением теста!</h4>\r\n                    </Modal.Title>\r\n                    <Button variant=\"secondary\" onClick={close}>\r\n                        X\r\n                    </Button>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <div className={styles.indicators}>\r\n                        <h4>Ваш результат:</h4>\r\n                        <div className={styles.speed}>\r\n                            <span className={styles.indicators_span}>\r\n                                <img src={Speed} alt=\"\" className={styles.icon} />\r\n                                Скорость\r\n                            </span>\r\n                            <span className={styles.indicators_numbers}>\r\n                                {isNaN(speed) ? (0).toFixed(2) : speed.toFixed(2)}\r\n                                <span className={styles.small_text}>зн/мин.</span>\r\n                            </span>\r\n                        </div>\r\n                        <div className={styles.accuracy}>\r\n                            <span className={styles.indicators_span}>\r\n                                <img src={Target} alt=\"\" className={styles.icon} />\r\n                                Точность\r\n                            </span>\r\n                            <span className={styles.indicators_numbers}>\r\n                                {accuracy.toFixed(2)} <span className={styles.small_text}>%</span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"success\"\r\n                        onClick={() => {\r\n                            restart();\r\n                            close()\r\n                        }}\r\n                    >\r\n                        Попробовать еще раз\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport DropDown from '../DropDown/DropDown';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst StartModal = ({ startTest, start, language, setLanguage, time }) => {\r\n    const [show, setShow] = useState(false);\r\n    useEffect(() => {\r\n        setShow(time === 0 && !start);\r\n    }, [time, start]);\r\n    return (\r\n        <div className=\"modal\">\r\n            <Modal show={show} centered={true} onHide={() => {}}>\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h4>Тренажер слепой печати</h4>\r\n                    </Modal.Title>\r\n                    <DropDown language={language} setLanguage={setLanguage} />\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <h5 fontSize=\"lg\">Нажми, Начать тест, когда будешь готов!</h5>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"success\" onClick={startTest}>\r\n                        Начать тест\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartModal;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport styles from './Text.module.scss';\r\nimport Letter from './Letter/Letter';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport Target from '../../icons/target.svg';\r\nimport Speed from '../../icons/speed.svg';\r\nimport SuccessModal from '../Modal/SuccessModal';\r\nimport StartModal from '../Modal/StartModal';\r\n\r\nconst Text = ({ start, startTest, language, setLanguage }) => {\r\n    const [text, setText] = useState([]);\r\n    const [time, setTime] = useState(0);\r\n    const [passedText, setPassedText] = useState([]);\r\n    const [activeText, setActiveText] = useState([]);\r\n    const [defaultText, setDefaultText] = useState([]);\r\n    const [changeIndex, setChangeIndex] = useState(0);\r\n    const [status, setStatus] = useState('active');\r\n    const [correctCount, setCorrectCount] = useState(0);\r\n    const [mistakeCount, setMistakeCount] = useState(0);\r\n    const [speed, setSpeed] = useState(0);\r\n    const [accuracy, setAccuracy] = useState(100);\r\n    const inputRef = useRef();\r\n\r\n    const ruUrl = 'https://fish-text.ru/get?&type=paragraph&number=3&type=json';\r\n    const enUrl = 'https://baconipsum.com/api/?callback=?type=meat-and-filler&paras=2';\r\n\r\n    //Main function. Get text from API\r\n    const getText = async (e) => {\r\n        try {\r\n            const newText = async () => {\r\n                const res = await fetch(`${language === 'Russian' ? ruUrl : enUrl}`);\r\n                const data = res.json();\r\n                return data;\r\n            };\r\n            newText().then((data) => {\r\n                setTime(0);\r\n                setChangeIndex(0);\r\n                setStatus('active');\r\n                setSpeed(0);\r\n                setAccuracy(100);\r\n                setCorrectCount(0);\r\n                setMistakeCount(0);\r\n                if (language !== 'Russian') {\r\n                    const newData = data.join();\r\n                    setText(newData.split(''));\r\n                } else {\r\n                    setText(data.text.split(''));\r\n                }\r\n\r\n                inputRef.current.focus();\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    //JSON API call\r\n    useEffect(() => {\r\n        if (start === false && time === 0) {\r\n            getText();\r\n        }\r\n    }, [start, language]);\r\n\r\n    //Flag to start typing\r\n    useEffect(() => {\r\n        if (text.length === passedText.length && text.length !== 0) {\r\n            startTest();\r\n        }\r\n    }, [text, passedText]);\r\n\r\n    //Text styles by slice to a three arrays\r\n    useEffect(() => {\r\n        setPassedText(text.slice(0, changeIndex));\r\n        setActiveText(text.slice(changeIndex, changeIndex + 1));\r\n        setDefaultText(text.slice(changeIndex + 1));\r\n    }, [text, changeIndex]);\r\n\r\n    //KeyEvents\r\n    useEffect(() => {\r\n        const useKeyPress = async (e) => {\r\n            inputRef.current.focus();\r\n            if (e.key === 'Tab') {\r\n                e.preventDefault();\r\n                inputRef.current.focus();\r\n            }\r\n            if (e.key === activeText[0]) {\r\n                setStatus('active');\r\n                setCorrectCount((count) => count + 1);\r\n                setChangeIndex((changeIndex) => changeIndex + 1);\r\n            }\r\n            if (e.key !== activeText[0] && text.length !== 0 && status === 'active') {\r\n                setMistakeCount((mistakeCount) => mistakeCount + 1);\r\n                setStatus('mistake');\r\n            }\r\n        };\r\n        document.addEventListener('keypress', useKeyPress);\r\n\r\n        return () => {\r\n            document.removeEventListener('keypress', useKeyPress);\r\n        };\r\n    }, [activeText, status, time, mistakeCount]);\r\n\r\n    //Time and maths operators (speed and accuracy)\r\n    useEffect(() => {\r\n        if (start) {\r\n            const interval = setInterval(() => {\r\n                setTime((time) => time + 1);\r\n                setSpeed(Math.round(correctCount / (time / 60)));\r\n                setAccuracy((text.length - mistakeCount) / (text.length / 100));\r\n            }, 1000);\r\n            return () => {\r\n                clearInterval(interval);\r\n            };\r\n        }\r\n    }, [start, time]);\r\n\r\n    return (\r\n        <div className={styles.view}>\r\n            <NavBar\r\n                language={language}\r\n                setLanguage={setLanguage}\r\n                start={start}\r\n                startTest={startTest}\r\n                restart={getText}\r\n            />\r\n\r\n            <div className={styles.typing_block}>\r\n                <div className={styles.text_body}>\r\n                    <input type=\"text\" ref={inputRef} className={styles.input} />\r\n                    <div className={styles.text}>\r\n                        {passedText !== '' &&\r\n                            passedText.map((el, index) => {\r\n                                return <Letter value={el} key={index} style={'passed'} />;\r\n                            })}\r\n                        {activeText !== '' &&\r\n                            activeText.map((el, index) => {\r\n                                return <Letter value={el} key={index} style={status} />;\r\n                            })}\r\n                        {defaultText !== '' &&\r\n                            defaultText.map((el, index) => {\r\n                                return <Letter value={el} key={index} style={'default'} />;\r\n                            })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.indicators}>\r\n                    <div className={styles.speed}>\r\n                        <span className={styles.indicators_span}>\r\n                            <img src={Speed} alt=\"\" className={styles.icon} />\r\n                            Скорость\r\n                        </span>\r\n                        <span className={styles.indicators_numbers}>\r\n                            {isNaN(speed) ? (0).toFixed(2) : speed.toFixed(2)}\r\n                            <span className={styles.small_text}>зн/мин.</span>\r\n                        </span>\r\n                    </div>\r\n                    <div className={styles.accuracy}>\r\n                        <span className={styles.indicators_span}>\r\n                            <img src={Target} alt=\"\" className={styles.icon} />\r\n                            Точность\r\n                        </span>\r\n                        <span className={styles.indicators_numbers}>\r\n                            {accuracy.toFixed(2)} <span className={styles.small_text}>%</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <StartModal startTest={startTest} start={start} language={language} setLanguage={setLanguage} time={time} />\r\n\r\n            <SuccessModal\r\n                startTest={startTest}\r\n                passedText={passedText}\r\n                text={text}\r\n                speed={speed}\r\n                accuracy={accuracy}\r\n                restart={getText}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default Text;\r\n","import React, { useState } from 'react';\r\nimport styles from './Main.module.scss';\r\nimport Text from './Text/Text';\r\n\r\nconst Main = () => {\r\n    const [start, setStart] = useState(false);\r\n    const [language, setLanguage] = useState('Russian');\r\n    const startTest = () => {\r\n        setStart(!start);\r\n    };\r\n    return (\r\n        <div className={styles.main}>\r\n            <Text start={start} startTest={startTest} language={language} setLanguage={setLanguage} />\r\n        </div>\r\n    );\r\n};\r\nexport default Main;\r\n","import Main from './Main/Main';\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Main />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"Text_view__26ufc\",\"text_body\":\"Text_text_body__2PjT-\",\"text\":\"Text_text__1afx0\",\"input\":\"Text_input__3u9ET\",\"typing_block\":\"Text_typing_block__1fXbR\",\"indicators\":\"Text_indicators__3R2Lt\",\"accuracy\":\"Text_accuracy__mh8AA\",\"speed\":\"Text_speed__2IFkQ\",\"indicators_span\":\"Text_indicators_span__142oP\",\"icon\":\"Text_icon__1cjs7\",\"indicators_numbers\":\"Text_indicators_numbers__19JT2\",\"small_text\":\"Text_small_text__2ZTet\"};"],"sourceRoot":""}